{"version":3,"file":"preact.modern.js","sources":["../src/constants.js","../src/util.js","../src/options.js","../src/diff/catch-error.js","../src/create-element.js","../src/component.js","../src/diff/children.js","../src/diff/props.js","../src/diff/index.js","../src/render.js","../src/clone-element.js","../src/create-context.js"],"sourcesContent":["export const EMPTY_OBJ = {};\nexport const EMPTY_ARR = [];\nexport const IS_NON_DIMENSIONAL = /acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i;\n","/**\n * Assign properties from `props` to `obj`\n * @template O, P The obj and props types\n * @param {O} obj The object to copy properties to\n * @param {P} props The object to copy properties from\n * @returns {O & P}\n */\nexport function assign(obj, props) {\n\t// @ts-ignore We change the type of `obj` to be `O & P`\n\tfor (let i in props) obj[i] = props[i];\n\treturn /** @type {O & P} */ (obj);\n}\n\n/**\n * Remove a child node from its parent if attached. This is a workaround for\n * IE11 which doesn't support `Element.prototype.remove()`. Using this function\n * is smaller than including a dedicated polyfill.\n * @param {Node} node The node to remove\n */\nexport function removeNode(node) {\n\tlet parentNode = node.parentNode;\n\tif (parentNode) parentNode.removeChild(node);\n}\n","import { _catchError } from './diff/catch-error';\n\n/**\n * The `option` object can potentially contain callback functions\n * that are called during various stages of our renderer. This is the\n * foundation on which all our addons like `preact/debug`, `preact/compat`,\n * and `preact/hooks` are based on. See the `Options` type in `internal.d.ts`\n * for a full list of available option hooks (most editors/IDEs allow you to\n * ctrl+click or cmd+click on mac the type definition below).\n * @type {import('./internal').Options}\n */\nconst options = {\n\t_catchError,\n\t_vnodeId: 0\n};\n\nexport default options;\n","// import { enqueueRender } from '../component';\n\n/**\n * Find the closest error boundary to a thrown error and call it\n * @param {object} error The thrown value\n * @param {import('../internal').VNode} vnode The vnode that threw\n * the error that was caught (except for unmounting when this parameter\n * is the highest parent that was being unmounted)\n */\nexport function _catchError(error, vnode) {\n\t/** @type {import('../internal').Component} */\n\tlet component, ctor, handled;\n\n\tconst wasHydrating = vnode._hydrating;\n\n\tfor (; (vnode = vnode._parent); ) {\n\t\tif ((component = vnode._component) && !component._processingException) {\n\t\t\ttry {\n\t\t\t\tctor = component.constructor;\n\n\t\t\t\tif (ctor && ctor.getDerivedStateFromError != null) {\n\t\t\t\t\tcomponent.setState(ctor.getDerivedStateFromError(error));\n\t\t\t\t\thandled = component._dirty;\n\t\t\t\t}\n\n\t\t\t\tif (component.componentDidCatch != null) {\n\t\t\t\t\tcomponent.componentDidCatch(error);\n\t\t\t\t\thandled = component._dirty;\n\t\t\t\t}\n\n\t\t\t\t// This is an error boundary. Mark it as having bailed out, and whether it was mid-hydration.\n\t\t\t\tif (handled) {\n\t\t\t\t\tvnode._hydrating = wasHydrating;\n\t\t\t\t\treturn (component._pendingError = component);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\terror = e;\n\t\t\t}\n\t\t}\n\t}\n\n\tthrow error;\n}\n","import options from './options';\n\n/**\n * Create an virtual node (used for JSX)\n * @param {import('./internal').VNode[\"type\"]} type The node name or Component\n * constructor for this virtual node\n * @param {object | null | undefined} [props] The properties of the virtual node\n * @param {Array<import('.').ComponentChildren>} [children] The children of the virtual node\n * @returns {import('./internal').VNode}\n */\nexport function createElement(type, props, children) {\n\tlet normalizedProps = {},\n\t\tkey,\n\t\tref,\n\t\ti;\n\tfor (i in props) {\n\t\tif (i == 'key') key = props[i];\n\t\telse if (i == 'ref') ref = props[i];\n\t\telse normalizedProps[i] = props[i];\n\t}\n\n\tif (arguments.length > 3) {\n\t\tchildren = [children];\n\t\t// https://github.com/preactjs/preact/issues/1916\n\t\tfor (i = 3; i < arguments.length; i++) {\n\t\t\tchildren.push(arguments[i]);\n\t\t}\n\t}\n\tif (children != null) {\n\t\tnormalizedProps.children = children;\n\t}\n\n\t// If a Component VNode, check for and apply defaultProps\n\t// Note: type may be undefined in development, must never error here.\n\tif (typeof type == 'function' && type.defaultProps != null) {\n\t\tfor (i in type.defaultProps) {\n\t\t\tif (normalizedProps[i] === undefined) {\n\t\t\t\tnormalizedProps[i] = type.defaultProps[i];\n\t\t\t}\n\t\t}\n\t}\n\n\treturn createVNode(type, normalizedProps, key, ref, null);\n}\n\n/**\n * Create a VNode (used internally by Preact)\n * @param {import('./internal').VNode[\"type\"]} type The node name or Component\n * Constructor for this virtual node\n * @param {object | string | number | null} props The properties of this virtual node.\n * If this virtual node represents a text node, this is the text of the node (string or number).\n * @param {string | number | null} key The key for this virtual node, used when\n * diffing it against its children\n * @param {import('./internal').VNode[\"ref\"]} ref The ref property that will\n * receive a reference to its created child\n * @returns {import('./internal').VNode}\n */\nexport function createVNode(type, props, key, ref, original) {\n\t// V8 seems to be better at detecting type shapes if the object is allocated from the same call site\n\t// Do not inline into createElement and coerceToVNode!\n\tconst vnode = {\n\t\ttype,\n\t\tprops,\n\t\tkey,\n\t\tref,\n\t\t_children: null,\n\t\t_parent: null,\n\t\t_depth: 0,\n\t\t_dom: null,\n\t\t// _nextDom must be initialized to undefined b/c it will eventually\n\t\t// be set to dom.nextSibling which can return `null` and it is important\n\t\t// to be able to distinguish between an uninitialized _nextDom and\n\t\t// a _nextDom that has been set to `null`\n\t\t_nextDom: undefined,\n\t\t_component: null,\n\t\t_hydrating: null,\n\t\tconstructor: undefined,\n\t\t_original: original == null ? ++options._vnodeId : original\n\t};\n\n\tif (options.vnode != null) options.vnode(vnode);\n\n\treturn vnode;\n}\n\nexport function createRef() {\n\treturn { current: null };\n}\n\nexport function Fragment(props) {\n\treturn props.children;\n}\n\n/**\n * Check if a the argument is a valid Preact VNode.\n * @param {*} vnode\n * @returns {vnode is import('./internal').VNode}\n */\nexport const isValidElement = vnode =>\n\tvnode != null && vnode.constructor === undefined;\n","import { assign } from './util';\nimport { diff, commitRoot } from './diff/index';\nimport options from './options';\nimport { Fragment } from './create-element';\n\n/**\n * Base Component class. Provides `setState()` and `forceUpdate()`, which\n * trigger rendering\n * @param {object} props The initial component props\n * @param {object} context The initial context from parent components'\n * getChildContext\n */\nexport function Component(props, context) {\n\tthis.props = props;\n\tthis.context = context;\n}\n\n/**\n * Update component state and schedule a re-render.\n * @this {import('./internal').Component}\n * @param {object | ((s: object, p: object) => object)} update A hash of state\n * properties to update with new values or a function that given the current\n * state and props returns a new partial state\n * @param {() => void} [callback] A function to be called once component state is\n * updated\n */\nComponent.prototype.setState = function(update, callback) {\n\t// only clone state when copying to nextState the first time.\n\tlet s;\n\tif (this._nextState != null && this._nextState !== this.state) {\n\t\ts = this._nextState;\n\t} else {\n\t\ts = this._nextState = assign({}, this.state);\n\t}\n\n\tif (typeof update == 'function') {\n\t\t// Some libraries like `immer` mark the current state as readonly,\n\t\t// preventing us from mutating it, so we need to clone it. See #2716\n\t\tupdate = update(assign({}, s), this.props);\n\t}\n\n\tif (update) {\n\t\tassign(s, update);\n\t}\n\n\t// Skip update if updater function returned null\n\tif (update == null) return;\n\n\tif (this._vnode) {\n\t\tif (callback) this._renderCallbacks.push(callback);\n\t\tenqueueRender(this);\n\t}\n};\n\n/**\n * Immediately perform a synchronous re-render of the component\n * @this {import('./internal').Component}\n * @param {() => void} [callback] A function to be called after component is\n * re-rendered\n */\nComponent.prototype.forceUpdate = function(callback) {\n\tif (this._vnode) {\n\t\t// Set render mode so that we can differentiate where the render request\n\t\t// is coming from. We need this because forceUpdate should never call\n\t\t// shouldComponentUpdate\n\t\tthis._force = true;\n\t\tif (callback) this._renderCallbacks.push(callback);\n\t\tenqueueRender(this);\n\t}\n};\n\n/**\n * Accepts `props` and `state`, and returns a new Virtual DOM tree to build.\n * Virtual DOM is generally constructed via [JSX](http://jasonformat.com/wtf-is-jsx).\n * @param {object} props Props (eg: JSX attributes) received from parent\n * element/component\n * @param {object} state The component's current state\n * @param {object} context Context object, as returned by the nearest\n * ancestor's `getChildContext()`\n * @returns {import('./index').ComponentChildren | void}\n */\nComponent.prototype.render = Fragment;\n\n/**\n * @param {import('./internal').VNode} vnode\n * @param {number | null} [childIndex]\n */\nexport function getDomSibling(vnode, childIndex) {\n\tif (childIndex == null) {\n\t\t// Use childIndex==null as a signal to resume the search from the vnode's sibling\n\t\treturn vnode._parent\n\t\t\t? getDomSibling(vnode._parent, vnode._parent._children.indexOf(vnode) + 1)\n\t\t\t: null;\n\t}\n\n\tlet sibling;\n\tfor (; childIndex < vnode._children.length; childIndex++) {\n\t\tsibling = vnode._children[childIndex];\n\n\t\tif (sibling != null && sibling._dom != null) {\n\t\t\t// Since updateParentDomPointers keeps _dom pointer correct,\n\t\t\t// we can rely on _dom to tell us if this subtree contains a\n\t\t\t// rendered DOM node, and what the first rendered DOM node is\n\t\t\treturn sibling._dom;\n\t\t}\n\t}\n\n\t// If we get here, we have not found a DOM node in this vnode's children.\n\t// We must resume from this vnode's sibling (in it's parent _children array)\n\t// Only climb up and search the parent if we aren't searching through a DOM\n\t// VNode (meaning we reached the DOM parent of the original vnode that began\n\t// the search)\n\treturn typeof vnode.type == 'function' ? getDomSibling(vnode) : null;\n}\n\n/**\n * Trigger in-place re-rendering of a component.\n * @param {import('./internal').Component} component The component to rerender\n */\nfunction renderComponent(component) {\n\tlet vnode = component._vnode,\n\t\toldDom = vnode._dom,\n\t\tparentDom = component._parentDom;\n\n\tif (parentDom) {\n\t\tlet commitQueue = [];\n\t\tconst oldVNode = assign({}, vnode);\n\t\toldVNode._original = vnode._original + 1;\n\n\t\tdiff(\n\t\t\tparentDom,\n\t\t\tvnode,\n\t\t\toldVNode,\n\t\t\tcomponent._globalContext,\n\t\t\tparentDom.ownerSVGElement !== undefined,\n\t\t\tvnode._hydrating != null ? [oldDom] : null,\n\t\t\tcommitQueue,\n\t\t\toldDom == null ? getDomSibling(vnode) : oldDom,\n\t\t\tvnode._hydrating\n\t\t);\n\t\tcommitRoot(commitQueue, vnode);\n\n\t\tif (vnode._dom != oldDom) {\n\t\t\tupdateParentDomPointers(vnode);\n\t\t}\n\t}\n}\n\n/**\n * @param {import('./internal').VNode} vnode\n */\nfunction updateParentDomPointers(vnode) {\n\tif ((vnode = vnode._parent) != null && vnode._component != null) {\n\t\tvnode._dom = vnode._component.base = null;\n\t\tfor (let i = 0; i < vnode._children.length; i++) {\n\t\t\tlet child = vnode._children[i];\n\t\t\tif (child != null && child._dom != null) {\n\t\t\t\tvnode._dom = vnode._component.base = child._dom;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn updateParentDomPointers(vnode);\n\t}\n}\n\n/**\n * The render queue\n * @type {Array<import('./internal').Component>}\n */\nlet rerenderQueue = [];\n\n/**\n * Asynchronously schedule a callback\n * @type {(cb: () => void) => void}\n */\n/* istanbul ignore next */\n// Note the following line isn't tree-shaken by rollup cuz of rollup/rollup#2566\nconst defer =\n\ttypeof Promise == 'function'\n\t\t? Promise.prototype.then.bind(Promise.resolve())\n\t\t: setTimeout;\n\n/*\n * The value of `Component.debounce` must asynchronously invoke the passed in callback. It is\n * important that contributors to Preact can consistently reason about what calls to `setState`, etc.\n * do, and when their effects will be applied. See the links below for some further reading on designing\n * asynchronous APIs.\n * * [Designing APIs for Asynchrony](https://blog.izs.me/2013/08/designing-apis-for-asynchrony)\n * * [Callbacks synchronous and asynchronous](https://blog.ometer.com/2011/07/24/callbacks-synchronous-and-asynchronous/)\n */\n\nlet prevDebounce;\n\n/**\n * Enqueue a rerender of a component\n * @param {import('./internal').Component} c The component to rerender\n */\nexport function enqueueRender(c) {\n\tif (\n\t\t(!c._dirty &&\n\t\t\t(c._dirty = true) &&\n\t\t\trerenderQueue.push(c) &&\n\t\t\t!process._rerenderCount++) ||\n\t\tprevDebounce !== options.debounceRendering\n\t) {\n\t\tprevDebounce = options.debounceRendering;\n\t\t(prevDebounce || defer)(process);\n\t}\n}\n\n/** Flush the render queue by rerendering all queued components */\nfunction process() {\n\tlet queue;\n\twhile ((process._rerenderCount = rerenderQueue.length)) {\n\t\tqueue = rerenderQueue.sort((a, b) => a._vnode._depth - b._vnode._depth);\n\t\trerenderQueue = [];\n\t\t// Don't update `renderCount` yet. Keep its value non-zero to prevent unnecessary\n\t\t// process() calls from getting scheduled while `queue` is still being consumed.\n\t\tqueue.some(c => {\n\t\t\tif (c._dirty) renderComponent(c);\n\t\t});\n\t}\n}\nprocess._rerenderCount = 0;\n","import { diff, unmount, applyRef } from './index';\nimport { createVNode, Fragment } from '../create-element';\nimport { EMPTY_OBJ, EMPTY_ARR } from '../constants';\nimport { removeNode } from '../util';\nimport { getDomSibling } from '../component';\n\n/**\n * Diff the children of a virtual node\n * @param {import('../internal').PreactElement} parentDom The DOM element whose\n * children are being diffed\n * @param {import('../internal').ComponentChildren[]} renderResult\n * @param {import('../internal').VNode} newParentVNode The new virtual\n * node whose children should be diff'ed against oldParentVNode\n * @param {import('../internal').VNode} oldParentVNode The old virtual\n * node whose children should be diff'ed against newParentVNode\n * @param {object} globalContext The current context object - modified by getChildContext\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node\n * @param {Array<import('../internal').PreactElement>} excessDomChildren\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {import('../internal').PreactElement} oldDom The current attached DOM\n * element any new dom elements should be placed around. Likely `null` on first\n * render (except when hydrating). Can be a sibling DOM element when diffing\n * Fragments that have siblings. In most cases, it starts out as `oldChildren[0]._dom`.\n * @param {boolean} isHydrating Whether or not we are in hydration\n */\nexport function diffChildren(\n\tparentDom,\n\trenderResult,\n\tnewParentVNode,\n\toldParentVNode,\n\tglobalContext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\toldDom,\n\tisHydrating\n) {\n\tlet i, j, oldVNode, childVNode, newDom, firstChildDom, refs;\n\n\t// This is a compression of oldParentVNode!=null && oldParentVNode != EMPTY_OBJ && oldParentVNode._children || EMPTY_ARR\n\t// as EMPTY_OBJ._children should be `undefined`.\n\tlet oldChildren = (oldParentVNode && oldParentVNode._children) || EMPTY_ARR;\n\n\tlet oldChildrenLength = oldChildren.length;\n\n\t// Only in very specific places should this logic be invoked (top level `render` and `diffElementNodes`).\n\t// I'm using `EMPTY_OBJ` to signal when `diffChildren` is invoked in these situations. I can't use `null`\n\t// for this purpose, because `null` is a valid value for `oldDom` which can mean to skip to this logic\n\t// (e.g. if mounting a new tree in which the old DOM should be ignored (usually for Fragments).\n\tif (oldDom == EMPTY_OBJ) {\n\t\tif (excessDomChildren != null) {\n\t\t\toldDom = excessDomChildren[0];\n\t\t} else if (oldChildrenLength) {\n\t\t\toldDom = getDomSibling(oldParentVNode, 0);\n\t\t} else {\n\t\t\toldDom = null;\n\t\t}\n\t}\n\n\tnewParentVNode._children = [];\n\tfor (i = 0; i < renderResult.length; i++) {\n\t\tchildVNode = renderResult[i];\n\n\t\tif (childVNode == null || typeof childVNode == 'boolean') {\n\t\t\tchildVNode = newParentVNode._children[i] = null;\n\t\t}\n\t\t// If this newVNode is being reused (e.g. <div>{reuse}{reuse}</div>) in the same diff,\n\t\t// or we are rendering a component (e.g. setState) copy the oldVNodes so it can have\n\t\t// it's own DOM & etc. pointers\n\t\telse if (typeof childVNode == 'string' || typeof childVNode == 'number') {\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tnull,\n\t\t\t\tchildVNode,\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\tchildVNode\n\t\t\t);\n\t\t} else if (Array.isArray(childVNode)) {\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tFragment,\n\t\t\t\t{ children: childVNode },\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\tnull\n\t\t\t);\n\t\t} else if (childVNode._depth > 0) {\n\t\t\t// VNode is already in use, clone it. This can happen in the following\n\t\t\t// scenario:\n\t\t\t//   const reuse = <div />\n\t\t\t//   <div>{reuse}<span />{reuse}</div>\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tchildVNode.type,\n\t\t\t\tchildVNode.props,\n\t\t\t\tchildVNode.key,\n\t\t\t\tnull,\n\t\t\t\tchildVNode._original\n\t\t\t);\n\t\t} else {\n\t\t\tchildVNode = newParentVNode._children[i] = childVNode;\n\t\t}\n\n\t\t// Terser removes the `continue` here and wraps the loop body\n\t\t// in a `if (childVNode) { ... } condition\n\t\tif (childVNode == null) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tchildVNode._parent = newParentVNode;\n\t\tchildVNode._depth = newParentVNode._depth + 1;\n\n\t\t// Check if we find a corresponding element in oldChildren.\n\t\t// If found, delete the array item by setting to `undefined`.\n\t\t// We use `undefined`, as `null` is reserved for empty placeholders\n\t\t// (holes).\n\t\toldVNode = oldChildren[i];\n\n\t\tif (\n\t\t\toldVNode === null ||\n\t\t\t(oldVNode &&\n\t\t\t\tchildVNode.key == oldVNode.key &&\n\t\t\t\tchildVNode.type === oldVNode.type)\n\t\t) {\n\t\t\toldChildren[i] = undefined;\n\t\t} else {\n\t\t\t// Either oldVNode === undefined or oldChildrenLength > 0,\n\t\t\t// so after this loop oldVNode == null or oldVNode is a valid value.\n\t\t\tfor (j = 0; j < oldChildrenLength; j++) {\n\t\t\t\toldVNode = oldChildren[j];\n\t\t\t\t// If childVNode is unkeyed, we only match similarly unkeyed nodes, otherwise we match by key.\n\t\t\t\t// We always match by type (in either case).\n\t\t\t\tif (\n\t\t\t\t\toldVNode &&\n\t\t\t\t\tchildVNode.key == oldVNode.key &&\n\t\t\t\t\tchildVNode.type === oldVNode.type\n\t\t\t\t) {\n\t\t\t\t\toldChildren[j] = undefined;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\toldVNode = null;\n\t\t\t}\n\t\t}\n\n\t\toldVNode = oldVNode || EMPTY_OBJ;\n\n\t\t// Morph the old element into the new one, but don't append it to the dom yet\n\t\tdiff(\n\t\t\tparentDom,\n\t\t\tchildVNode,\n\t\t\toldVNode,\n\t\t\tglobalContext,\n\t\t\tisSvg,\n\t\t\texcessDomChildren,\n\t\t\tcommitQueue,\n\t\t\toldDom,\n\t\t\tisHydrating\n\t\t);\n\n\t\tnewDom = childVNode._dom;\n\n\t\tif ((j = childVNode.ref) && oldVNode.ref != j) {\n\t\t\tif (!refs) refs = [];\n\t\t\tif (oldVNode.ref) refs.push(oldVNode.ref, null, childVNode);\n\t\t\trefs.push(j, childVNode._component || newDom, childVNode);\n\t\t}\n\n\t\tif (newDom != null) {\n\t\t\tif (firstChildDom == null) {\n\t\t\t\tfirstChildDom = newDom;\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\ttypeof childVNode.type == 'function' &&\n\t\t\t\tchildVNode._children === oldVNode._children\n\t\t\t) {\n\t\t\t\tchildVNode._nextDom = oldDom = reorderChildren(\n\t\t\t\t\tchildVNode,\n\t\t\t\t\toldDom,\n\t\t\t\t\tparentDom\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\toldDom = placeChild(\n\t\t\t\t\tparentDom,\n\t\t\t\t\tchildVNode,\n\t\t\t\t\toldVNode,\n\t\t\t\t\toldChildren,\n\t\t\t\t\texcessDomChildren,\n\t\t\t\t\tnewDom,\n\t\t\t\t\toldDom\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t// Browsers will infer an option's `value` from `textContent` when\n\t\t\t// no value is present. This essentially bypasses our code to set it\n\t\t\t// later in `diff()`. It works fine in all browsers except for IE11\n\t\t\t// where it breaks setting `select.value`. There it will be always set\n\t\t\t// to an empty string. Re-applying an options value will fix that, so\n\t\t\t// there are probably some internal data structures that aren't\n\t\t\t// updated properly.\n\t\t\t//\n\t\t\t// To fix it we make sure to reset the inferred value, so that our own\n\t\t\t// value check in `diff()` won't be skipped.\n\t\t\tif (!isHydrating && newParentVNode.type === 'option') {\n\t\t\t\t// @ts-ignore We have validated that the type of parentDOM is 'option'\n\t\t\t\t// in the above check\n\t\t\t\tparentDom.value = '';\n\t\t\t} else if (typeof newParentVNode.type == 'function') {\n\t\t\t\t// Because the newParentVNode is Fragment-like, we need to set it's\n\t\t\t\t// _nextDom property to the nextSibling of its last child DOM node.\n\t\t\t\t//\n\t\t\t\t// `oldDom` contains the correct value here because if the last child\n\t\t\t\t// is a Fragment-like, then oldDom has already been set to that child's _nextDom.\n\t\t\t\t// If the last child is a DOM VNode, then oldDom will be set to that DOM\n\t\t\t\t// node's nextSibling.\n\t\t\t\tnewParentVNode._nextDom = oldDom;\n\t\t\t}\n\t\t} else if (\n\t\t\toldDom &&\n\t\t\toldVNode._dom == oldDom &&\n\t\t\toldDom.parentNode != parentDom\n\t\t) {\n\t\t\t// The above condition is to handle null placeholders. See test in placeholder.test.js:\n\t\t\t// `efficiently replace null placeholders in parent rerenders`\n\t\t\toldDom = getDomSibling(oldVNode);\n\t\t}\n\t}\n\n\tnewParentVNode._dom = firstChildDom;\n\n\t// Remove children that are not part of any vnode.\n\tif (excessDomChildren != null && typeof newParentVNode.type != 'function') {\n\t\tfor (i = excessDomChildren.length; i--; ) {\n\t\t\tif (excessDomChildren[i] != null) removeNode(excessDomChildren[i]);\n\t\t}\n\t}\n\n\t// Remove remaining oldChildren if there are any.\n\tfor (i = oldChildrenLength; i--; ) {\n\t\tif (oldChildren[i] != null) {\n\t\t\tif (\n\t\t\t\ttypeof newParentVNode.type == 'function' &&\n\t\t\t\toldChildren[i]._dom != null &&\n\t\t\t\toldChildren[i]._dom == newParentVNode._nextDom\n\t\t\t) {\n\t\t\t\t// If the newParentVNode.__nextDom points to a dom node that is about to\n\t\t\t\t// be unmounted, then get the next sibling of that vnode and set\n\t\t\t\t// _nextDom to it\n\t\t\t\tnewParentVNode._nextDom = getDomSibling(oldParentVNode, i + 1);\n\t\t\t}\n\n\t\t\tunmount(oldChildren[i], oldChildren[i]);\n\t\t}\n\t}\n\n\t// Set refs only after unmount\n\tif (refs) {\n\t\tfor (i = 0; i < refs.length; i++) {\n\t\t\tapplyRef(refs[i], refs[++i], refs[++i]);\n\t\t}\n\t}\n}\n\nfunction reorderChildren(childVNode, oldDom, parentDom) {\n\tfor (let tmp = 0; tmp < childVNode._children.length; tmp++) {\n\t\tlet vnode = childVNode._children[tmp];\n\t\tif (vnode) {\n\t\t\tvnode._parent = childVNode;\n\n\t\t\tif (typeof vnode.type == 'function') {\n\t\t\t\treorderChildren(vnode, oldDom, parentDom);\n\t\t\t} else {\n\t\t\t\toldDom = placeChild(\n\t\t\t\t\tparentDom,\n\t\t\t\t\tvnode,\n\t\t\t\t\tvnode,\n\t\t\t\t\tchildVNode._children,\n\t\t\t\t\tnull,\n\t\t\t\t\tvnode._dom,\n\t\t\t\t\toldDom\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn oldDom;\n}\n\n/**\n * Flatten and loop through the children of a virtual node\n * @param {import('../index').ComponentChildren} children The unflattened\n * children of a virtual node\n * @returns {import('../internal').VNode[]}\n */\nexport function toChildArray(children, out) {\n\tout = out || [];\n\tif (children == null || typeof children == 'boolean') {\n\t} else if (Array.isArray(children)) {\n\t\tchildren.some(child => {\n\t\t\ttoChildArray(child, out);\n\t\t});\n\t} else {\n\t\tout.push(children);\n\t}\n\treturn out;\n}\n\nfunction placeChild(\n\tparentDom,\n\tchildVNode,\n\toldVNode,\n\toldChildren,\n\texcessDomChildren,\n\tnewDom,\n\toldDom\n) {\n\tlet nextDom;\n\tif (childVNode._nextDom !== undefined) {\n\t\t// Only Fragments or components that return Fragment like VNodes will\n\t\t// have a non-undefined _nextDom. Continue the diff from the sibling\n\t\t// of last DOM child of this child VNode\n\t\tnextDom = childVNode._nextDom;\n\n\t\t// Eagerly cleanup _nextDom. We don't need to persist the value because\n\t\t// it is only used by `diffChildren` to determine where to resume the diff after\n\t\t// diffing Components and Fragments. Once we store it the nextDOM local var, we\n\t\t// can clean up the property\n\t\tchildVNode._nextDom = undefined;\n\t} else if (\n\t\texcessDomChildren == oldVNode ||\n\t\tnewDom != oldDom ||\n\t\tnewDom.parentNode == null\n\t) {\n\t\t// NOTE: excessDomChildren==oldVNode above:\n\t\t// This is a compression of excessDomChildren==null && oldVNode==null!\n\t\t// The values only have the same type when `null`.\n\n\t\touter: if (oldDom == null || oldDom.parentNode !== parentDom) {\n\t\t\tparentDom.appendChild(newDom);\n\t\t\tnextDom = null;\n\t\t} else {\n\t\t\t// `j<oldChildrenLength; j+=2` is an alternative to `j++<oldChildrenLength/2`\n\t\t\tfor (\n\t\t\t\tlet sibDom = oldDom, j = 0;\n\t\t\t\t(sibDom = sibDom.nextSibling) && j < oldChildren.length;\n\t\t\t\tj += 2\n\t\t\t) {\n\t\t\t\tif (sibDom == newDom) {\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t}\n\t\t\tparentDom.insertBefore(newDom, oldDom);\n\t\t\tnextDom = oldDom;\n\t\t}\n\t}\n\n\t// If we have pre-calculated the nextDOM node, use it. Else calculate it now\n\t// Strictly check for `undefined` here cuz `null` is a valid value of `nextDom`.\n\t// See more detail in create-element.js:createVNode\n\tif (nextDom !== undefined) {\n\t\toldDom = nextDom;\n\t} else {\n\t\toldDom = newDom.nextSibling;\n\t}\n\n\treturn oldDom;\n}\n","import { IS_NON_DIMENSIONAL } from '../constants';\nimport options from '../options';\n\n/**\n * Diff the old and new properties of a VNode and apply changes to the DOM node\n * @param {import('../internal').PreactElement} dom The DOM node to apply\n * changes to\n * @param {object} newProps The new props\n * @param {object} oldProps The old props\n * @param {boolean} isSvg Whether or not this node is an SVG node\n * @param {boolean} hydrate Whether or not we are in hydration mode\n */\nexport function diffProps(dom, newProps, oldProps, isSvg, hydrate) {\n\tlet i;\n\n\tfor (i in oldProps) {\n\t\tif (i !== 'children' && i !== 'key' && !(i in newProps)) {\n\t\t\tsetProperty(dom, i, null, oldProps[i], isSvg);\n\t\t}\n\t}\n\n\tfor (i in newProps) {\n\t\tif (\n\t\t\t(!hydrate || typeof newProps[i] == 'function') &&\n\t\t\ti !== 'children' &&\n\t\t\ti !== 'key' &&\n\t\t\ti !== 'value' &&\n\t\t\ti !== 'checked' &&\n\t\t\toldProps[i] !== newProps[i]\n\t\t) {\n\t\t\tsetProperty(dom, i, newProps[i], oldProps[i], isSvg);\n\t\t}\n\t}\n}\n\nfunction setStyle(style, key, value) {\n\tif (key[0] === '-') {\n\t\tstyle.setProperty(key, value);\n\t} else if (value == null) {\n\t\tstyle[key] = '';\n\t} else if (typeof value != 'number' || IS_NON_DIMENSIONAL.test(key)) {\n\t\tstyle[key] = value;\n\t} else {\n\t\tstyle[key] = value + 'px';\n\t}\n}\n\n/**\n * Set a property value on a DOM node\n * @param {import('../internal').PreactElement} dom The DOM node to modify\n * @param {string} name The name of the property to set\n * @param {*} value The value to set the property to\n * @param {*} oldValue The old value the property had\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node or not\n */\nexport function setProperty(dom, name, value, oldValue, isSvg) {\n\tlet useCapture, nameLower, proxy;\n\n\tif (isSvg && name == 'className') name = 'class';\n\n\t// if (isSvg) {\n\t// \tif (name === 'className') name = 'class';\n\t// } else if (name === 'class') name += 'Name';\n\n\tif (name === 'style') {\n\t\tif (typeof value == 'string') {\n\t\t\tdom.style.cssText = value;\n\t\t} else {\n\t\t\tif (typeof oldValue == 'string') {\n\t\t\t\tdom.style.cssText = oldValue = '';\n\t\t\t}\n\n\t\t\tif (oldValue) {\n\t\t\t\tfor (name in oldValue) {\n\t\t\t\t\tif (!(value && name in value)) {\n\t\t\t\t\t\tsetStyle(dom.style, name, '');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (value) {\n\t\t\t\tfor (name in value) {\n\t\t\t\t\tif (!oldValue || value[name] !== oldValue[name]) {\n\t\t\t\t\t\tsetStyle(dom.style, name, value[name]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t// Benchmark for comparison: https://esbench.com/bench/574c954bdb965b9a00965ac6\n\telse if (name[0] === 'o' && name[1] === 'n') {\n\t\tuseCapture = name !== (name = name.replace(/Capture$/, ''));\n\t\tnameLower = name.toLowerCase();\n\t\tif (nameLower in dom) name = nameLower;\n\t\tname = name.slice(2);\n\n\t\tif (!dom._listeners) dom._listeners = {};\n\t\tdom._listeners[name + useCapture] = value;\n\n\t\tproxy = useCapture ? eventProxyCapture : eventProxy;\n\t\tif (value) {\n\t\t\tif (!oldValue) dom.addEventListener(name, proxy, useCapture);\n\t\t} else {\n\t\t\tdom.removeEventListener(name, proxy, useCapture);\n\t\t}\n\t} else if (\n\t\tname !== 'list' &&\n\t\tname !== 'tagName' &&\n\t\t// HTMLButtonElement.form and HTMLInputElement.form are read-only but can be set using\n\t\t// setAttribute\n\t\tname !== 'form' &&\n\t\tname !== 'type' &&\n\t\tname !== 'size' &&\n\t\tname !== 'download' &&\n\t\tname !== 'href' &&\n\t\t!isSvg &&\n\t\tname in dom\n\t) {\n\t\tdom[name] = value == null ? '' : value;\n\t} else if (typeof value != 'function' && name !== 'dangerouslySetInnerHTML') {\n\t\tif (name !== (name = name.replace(/xlink:?/, ''))) {\n\t\t\tif (value == null || value === false) {\n\t\t\t\tdom.removeAttributeNS(\n\t\t\t\t\t'http://www.w3.org/1999/xlink',\n\t\t\t\t\tname.toLowerCase()\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tdom.setAttributeNS(\n\t\t\t\t\t'http://www.w3.org/1999/xlink',\n\t\t\t\t\tname.toLowerCase(),\n\t\t\t\t\tvalue\n\t\t\t\t);\n\t\t\t}\n\t\t} else if (\n\t\t\tvalue == null ||\n\t\t\t(value === false &&\n\t\t\t\t// ARIA-attributes have a different notion of boolean values.\n\t\t\t\t// The value `false` is different from the attribute not\n\t\t\t\t// existing on the DOM, so we can't remove it. For non-boolean\n\t\t\t\t// ARIA-attributes we could treat false as a removal, but the\n\t\t\t\t// amount of exceptions would cost us too many bytes. On top of\n\t\t\t\t// that other VDOM frameworks also always stringify `false`.\n\t\t\t\t!/^ar/.test(name))\n\t\t) {\n\t\t\tdom.removeAttribute(name);\n\t\t} else {\n\t\t\tdom.setAttribute(name, value);\n\t\t}\n\t}\n}\n\n/**\n * Proxy an event to hooked event handlers\n * @param {Event} e The event object from the browser\n * @private\n */\nfunction eventProxy(e) {\n\tthis._listeners[e.type + false](options.event ? options.event(e) : e);\n}\n\nfunction eventProxyCapture(e) {\n\tthis._listeners[e.type + true](options.event ? options.event(e) : e);\n}\n","import { EMPTY_OBJ, EMPTY_ARR } from '../constants';\nimport { Component } from '../component';\nimport { Fragment } from '../create-element';\nimport { diffChildren } from './children';\nimport { diffProps, setProperty } from './props';\nimport { assign, removeNode } from '../util';\nimport options from '../options';\n\n/**\n * Diff two virtual nodes and apply proper changes to the DOM\n * @param {import('../internal').PreactElement} parentDom The parent of the DOM element\n * @param {import('../internal').VNode} newVNode The new virtual node\n * @param {import('../internal').VNode} oldVNode The old virtual node\n * @param {object} globalContext The current context object. Modified by getChildContext\n * @param {boolean} isSvg Whether or not this element is an SVG node\n * @param {Array<import('../internal').PreactElement>} excessDomChildren\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {import('../internal').PreactElement} oldDom The current attached DOM\n * element any new dom elements should be placed around. Likely `null` on first\n * render (except when hydrating). Can be a sibling DOM element when diffing\n * Fragments that have siblings. In most cases, it starts out as `oldChildren[0]._dom`.\n * @param {boolean} [isHydrating] Whether or not we are in hydration\n */\nexport function diff(\n\tparentDom,\n\tnewVNode,\n\toldVNode,\n\tglobalContext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\toldDom,\n\tisHydrating\n) {\n\tlet tmp,\n\t\tnewType = newVNode.type;\n\n\t// When passing through createElement it assigns the object\n\t// constructor as undefined. This to prevent JSON-injection.\n\tif (newVNode.constructor !== undefined) return null;\n\n\t// If the previous diff bailed out, resume creating/hydrating.\n\tif (oldVNode._hydrating != null) {\n\t\tisHydrating = oldVNode._hydrating;\n\t\toldDom = newVNode._dom = oldVNode._dom;\n\t\t// if we resume, we want the tree to be \"unlocked\"\n\t\tnewVNode._hydrating = null;\n\t\texcessDomChildren = [oldDom];\n\t}\n\n\tif ((tmp = options._diff)) tmp(newVNode);\n\n\ttry {\n\t\touter: if (typeof newType == 'function') {\n\t\t\tlet c, isNew, oldProps, oldState, snapshot, clearProcessingException;\n\t\t\tlet newProps = newVNode.props;\n\n\t\t\t// Necessary for createContext api. Setting this property will pass\n\t\t\t// the context value as `this.context` just for this component.\n\t\t\ttmp = newType.contextType;\n\t\t\tlet provider = tmp && globalContext[tmp._id];\n\t\t\tlet componentContext = tmp\n\t\t\t\t? provider\n\t\t\t\t\t? provider.props.value\n\t\t\t\t\t: tmp._defaultValue\n\t\t\t\t: globalContext;\n\n\t\t\t// Get component and set it to `c`\n\t\t\tif (oldVNode._component) {\n\t\t\t\tc = newVNode._component = oldVNode._component;\n\t\t\t\tclearProcessingException = c._processingException = c._pendingError;\n\t\t\t} else {\n\t\t\t\t// Instantiate the new component\n\t\t\t\tif ('prototype' in newType && newType.prototype.render) {\n\t\t\t\t\t// @ts-ignore The check above verifies that newType is suppose to be constructed\n\t\t\t\t\tnewVNode._component = c = new newType(newProps, componentContext); // eslint-disable-line new-cap\n\t\t\t\t} else {\n\t\t\t\t\t// @ts-ignore Trust me, Component implements the interface we want\n\t\t\t\t\tnewVNode._component = c = new Component(newProps, componentContext);\n\t\t\t\t\tc.constructor = newType;\n\t\t\t\t\tc.render = doRender;\n\t\t\t\t}\n\t\t\t\tif (provider) provider.sub(c);\n\n\t\t\t\tc.props = newProps;\n\t\t\t\tif (!c.state) c.state = {};\n\t\t\t\tc.context = componentContext;\n\t\t\t\tc._globalContext = globalContext;\n\t\t\t\tisNew = c._dirty = true;\n\t\t\t\tc._renderCallbacks = [];\n\t\t\t}\n\n\t\t\t// Invoke getDerivedStateFromProps\n\t\t\tif (c._nextState == null) {\n\t\t\t\tc._nextState = c.state;\n\t\t\t}\n\t\t\tif (newType.getDerivedStateFromProps != null) {\n\t\t\t\tif (c._nextState == c.state) {\n\t\t\t\t\tc._nextState = assign({}, c._nextState);\n\t\t\t\t}\n\n\t\t\t\tassign(\n\t\t\t\t\tc._nextState,\n\t\t\t\t\tnewType.getDerivedStateFromProps(newProps, c._nextState)\n\t\t\t\t);\n\t\t\t}\n\n\t\t\toldProps = c.props;\n\t\t\toldState = c.state;\n\n\t\t\t// Invoke pre-render lifecycle methods\n\t\t\tif (isNew) {\n\t\t\t\tif (\n\t\t\t\t\tnewType.getDerivedStateFromProps == null &&\n\t\t\t\t\tc.componentWillMount != null\n\t\t\t\t) {\n\t\t\t\t\tc.componentWillMount();\n\t\t\t\t}\n\n\t\t\t\tif (c.componentDidMount != null) {\n\t\t\t\t\tc._renderCallbacks.push(c.componentDidMount);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (\n\t\t\t\t\tnewType.getDerivedStateFromProps == null &&\n\t\t\t\t\tnewProps !== oldProps &&\n\t\t\t\t\tc.componentWillReceiveProps != null\n\t\t\t\t) {\n\t\t\t\t\tc.componentWillReceiveProps(newProps, componentContext);\n\t\t\t\t}\n\n\t\t\t\tif (\n\t\t\t\t\t(!c._force &&\n\t\t\t\t\t\tc.shouldComponentUpdate != null &&\n\t\t\t\t\t\tc.shouldComponentUpdate(\n\t\t\t\t\t\t\tnewProps,\n\t\t\t\t\t\t\tc._nextState,\n\t\t\t\t\t\t\tcomponentContext\n\t\t\t\t\t\t) === false) ||\n\t\t\t\t\tnewVNode._original === oldVNode._original\n\t\t\t\t) {\n\t\t\t\t\tc.props = newProps;\n\t\t\t\t\tc.state = c._nextState;\n\t\t\t\t\t// More info about this here: https://gist.github.com/JoviDeCroock/bec5f2ce93544d2e6070ef8e0036e4e8\n\t\t\t\t\tif (newVNode._original !== oldVNode._original) c._dirty = false;\n\t\t\t\t\tc._vnode = newVNode;\n\t\t\t\t\tnewVNode._dom = oldVNode._dom;\n\t\t\t\t\tnewVNode._children = oldVNode._children;\n\t\t\t\t\tif (c._renderCallbacks.length) {\n\t\t\t\t\t\tcommitQueue.push(c);\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\n\t\t\t\tif (c.componentWillUpdate != null) {\n\t\t\t\t\tc.componentWillUpdate(newProps, c._nextState, componentContext);\n\t\t\t\t}\n\n\t\t\t\tif (c.componentDidUpdate != null) {\n\t\t\t\t\tc._renderCallbacks.push(() => {\n\t\t\t\t\t\tc.componentDidUpdate(oldProps, oldState, snapshot);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tc.context = componentContext;\n\t\t\tc.props = newProps;\n\t\t\tc.state = c._nextState;\n\n\t\t\tif ((tmp = options._render)) tmp(newVNode);\n\n\t\t\tc._dirty = false;\n\t\t\tc._vnode = newVNode;\n\t\t\tc._parentDom = parentDom;\n\n\t\t\ttmp = c.render(c.props, c.state, c.context);\n\n\t\t\t// Handle setState called in render, see #2553\n\t\t\tc.state = c._nextState;\n\n\t\t\tif (c.getChildContext != null) {\n\t\t\t\tglobalContext = assign(assign({}, globalContext), c.getChildContext());\n\t\t\t}\n\n\t\t\tif (!isNew && c.getSnapshotBeforeUpdate != null) {\n\t\t\t\tsnapshot = c.getSnapshotBeforeUpdate(oldProps, oldState);\n\t\t\t}\n\n\t\t\tlet isTopLevelFragment =\n\t\t\t\ttmp != null && tmp.type === Fragment && tmp.key == null;\n\t\t\tlet renderResult = isTopLevelFragment ? tmp.props.children : tmp;\n\n\t\t\tdiffChildren(\n\t\t\t\tparentDom,\n\t\t\t\tArray.isArray(renderResult) ? renderResult : [renderResult],\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tisSvg,\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\toldDom,\n\t\t\t\tisHydrating\n\t\t\t);\n\n\t\t\tc.base = newVNode._dom;\n\n\t\t\t// We successfully rendered this VNode, unset any stored hydration/bailout state:\n\t\t\tnewVNode._hydrating = null;\n\n\t\t\tif (c._renderCallbacks.length) {\n\t\t\t\tcommitQueue.push(c);\n\t\t\t}\n\n\t\t\tif (clearProcessingException) {\n\t\t\t\tc._pendingError = c._processingException = null;\n\t\t\t}\n\n\t\t\tc._force = false;\n\t\t} else if (\n\t\t\texcessDomChildren == null &&\n\t\t\tnewVNode._original === oldVNode._original\n\t\t) {\n\t\t\tnewVNode._children = oldVNode._children;\n\t\t\tnewVNode._dom = oldVNode._dom;\n\t\t} else {\n\t\t\tnewVNode._dom = diffElementNodes(\n\t\t\t\toldVNode._dom,\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tisSvg,\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\tisHydrating\n\t\t\t);\n\t\t}\n\n\t\tif ((tmp = options.diffed)) tmp(newVNode);\n\t} catch (e) {\n\t\tnewVNode._original = null;\n\t\t// if hydrating or creating initial tree, bailout preserves DOM:\n\t\tif (isHydrating || excessDomChildren != null) {\n\t\t\tnewVNode._dom = oldDom;\n\t\t\tnewVNode._hydrating = !!isHydrating;\n\t\t\texcessDomChildren[excessDomChildren.indexOf(oldDom)] = null;\n\t\t\t// ^ could possibly be simplified to:\n\t\t\t// excessDomChildren.length = 0;\n\t\t}\n\t\toptions._catchError(e, newVNode, oldVNode);\n\t}\n}\n\n/**\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {import('../internal').VNode} root\n */\nexport function commitRoot(commitQueue, root) {\n\tif (options._commit) options._commit(root, commitQueue);\n\n\tcommitQueue.some(c => {\n\t\ttry {\n\t\t\t// @ts-ignore Reuse the commitQueue variable here so the type changes\n\t\t\tcommitQueue = c._renderCallbacks;\n\t\t\tc._renderCallbacks = [];\n\t\t\tcommitQueue.some(cb => {\n\t\t\t\t// @ts-ignore See above ts-ignore on commitQueue\n\t\t\t\tcb.call(c);\n\t\t\t});\n\t\t} catch (e) {\n\t\t\toptions._catchError(e, c._vnode);\n\t\t}\n\t});\n}\n\n/**\n * Diff two virtual nodes representing DOM element\n * @param {import('../internal').PreactElement} dom The DOM element representing\n * the virtual nodes being diffed\n * @param {import('../internal').VNode} newVNode The new virtual node\n * @param {import('../internal').VNode} oldVNode The old virtual node\n * @param {object} globalContext The current context object\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node\n * @param {*} excessDomChildren\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {boolean} isHydrating Whether or not we are in hydration\n * @returns {import('../internal').PreactElement}\n */\nfunction diffElementNodes(\n\tdom,\n\tnewVNode,\n\toldVNode,\n\tglobalContext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\tisHydrating\n) {\n\tlet i;\n\tlet oldProps = oldVNode.props;\n\tlet newProps = newVNode.props;\n\n\t// Tracks entering and exiting SVG namespace when descending through the tree.\n\tisSvg = newVNode.type === 'svg' || isSvg;\n\n\tif (excessDomChildren != null) {\n\t\tfor (i = 0; i < excessDomChildren.length; i++) {\n\t\t\tconst child = excessDomChildren[i];\n\n\t\t\t// if newVNode matches an element in excessDomChildren or the `dom`\n\t\t\t// argument matches an element in excessDomChildren, remove it from\n\t\t\t// excessDomChildren so it isn't later removed in diffChildren\n\t\t\tif (\n\t\t\t\tchild != null &&\n\t\t\t\t((newVNode.type === null\n\t\t\t\t\t? child.nodeType === 3\n\t\t\t\t\t: child.localName === newVNode.type) ||\n\t\t\t\t\tdom == child)\n\t\t\t) {\n\t\t\t\tdom = child;\n\t\t\t\texcessDomChildren[i] = null;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (dom == null) {\n\t\tif (newVNode.type === null) {\n\t\t\t// @ts-ignore createTextNode returns Text, we expect PreactElement\n\t\t\treturn document.createTextNode(newProps);\n\t\t}\n\n\t\tif (isSvg) {\n\t\t\tdom = document.createElementNS(\n\t\t\t\t'http://www.w3.org/2000/svg',\n\t\t\t\t// @ts-ignore We know `newVNode.type` is a string\n\t\t\t\tnewVNode.type\n\t\t\t);\n\t\t} else {\n\t\t\tdom = document.createElement(\n\t\t\t\t// @ts-ignore We know `newVNode.type` is a string\n\t\t\t\tnewVNode.type,\n\t\t\t\tnewProps.is && { is: newProps.is }\n\t\t\t);\n\t\t}\n\n\t\t// we created a new parent, so none of the previously attached children can be reused:\n\t\texcessDomChildren = null;\n\t\t// we are creating a new node, so we can assume this is a new subtree (in case we are hydrating), this deopts the hydrate\n\t\tisHydrating = false;\n\t}\n\n\tif (newVNode.type === null) {\n\t\t// During hydration, we still have to split merged text from SSR'd HTML.\n\t\tif (oldProps !== newProps && (!isHydrating || dom.data !== newProps)) {\n\t\t\tdom.data = newProps;\n\t\t}\n\t} else {\n\t\tif (excessDomChildren != null) {\n\t\t\texcessDomChildren = EMPTY_ARR.slice.call(dom.childNodes);\n\t\t}\n\n\t\toldProps = oldVNode.props || EMPTY_OBJ;\n\n\t\tlet oldHtml = oldProps.dangerouslySetInnerHTML;\n\t\tlet newHtml = newProps.dangerouslySetInnerHTML;\n\n\t\t// During hydration, props are not diffed at all (including dangerouslySetInnerHTML)\n\t\t// @TODO we should warn in debug mode when props don't match here.\n\t\tif (!isHydrating) {\n\t\t\t// But, if we are in a situation where we are using existing DOM (e.g. replaceNode)\n\t\t\t// we should read the existing DOM attributes to diff them\n\t\t\tif (excessDomChildren != null) {\n\t\t\t\toldProps = {};\n\t\t\t\tfor (let i = 0; i < dom.attributes.length; i++) {\n\t\t\t\t\toldProps[dom.attributes[i].name] = dom.attributes[i].value;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (newHtml || oldHtml) {\n\t\t\t\t// Avoid re-applying the same '__html' if it did not changed between re-render\n\t\t\t\tif (\n\t\t\t\t\t!newHtml ||\n\t\t\t\t\t((!oldHtml || newHtml.__html != oldHtml.__html) &&\n\t\t\t\t\t\tnewHtml.__html !== dom.innerHTML)\n\t\t\t\t) {\n\t\t\t\t\tdom.innerHTML = (newHtml && newHtml.__html) || '';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tdiffProps(dom, newProps, oldProps, isSvg, isHydrating);\n\n\t\t// If the new vnode didn't have dangerouslySetInnerHTML, diff its children\n\t\tif (newHtml) {\n\t\t\tnewVNode._children = [];\n\t\t} else {\n\t\t\ti = newVNode.props.children;\n\t\t\tdiffChildren(\n\t\t\t\tdom,\n\t\t\t\tArray.isArray(i) ? i : [i],\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tnewVNode.type === 'foreignObject' ? false : isSvg,\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\tEMPTY_OBJ,\n\t\t\t\tisHydrating\n\t\t\t);\n\t\t}\n\n\t\t// (as above, don't diff props during hydration)\n\t\tif (!isHydrating) {\n\t\t\tif (\n\t\t\t\t'value' in newProps &&\n\t\t\t\t(i = newProps.value) !== undefined &&\n\t\t\t\t// #2756 For the <progress>-element the initial value is 0,\n\t\t\t\t// despite the attribute not being present. When the attribute\n\t\t\t\t// is missing the progress bar is treated as indeterminate.\n\t\t\t\t// To fix that we'll always update it when it is 0 for progress elements\n\t\t\t\t(i !== dom.value || (newVNode.type === 'progress' && !i))\n\t\t\t) {\n\t\t\t\tsetProperty(dom, 'value', i, oldProps.value, false);\n\t\t\t}\n\t\t\tif (\n\t\t\t\t'checked' in newProps &&\n\t\t\t\t(i = newProps.checked) !== undefined &&\n\t\t\t\ti !== dom.checked\n\t\t\t) {\n\t\t\t\tsetProperty(dom, 'checked', i, oldProps.checked, false);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn dom;\n}\n\n/**\n * Invoke or update a ref, depending on whether it is a function or object ref.\n * @param {object|function} ref\n * @param {any} value\n * @param {import('../internal').VNode} vnode\n */\nexport function applyRef(ref, value, vnode) {\n\ttry {\n\t\tif (typeof ref == 'function') ref(value);\n\t\telse ref.current = value;\n\t} catch (e) {\n\t\toptions._catchError(e, vnode);\n\t}\n}\n\n/**\n * Unmount a virtual node from the tree and apply DOM changes\n * @param {import('../internal').VNode} vnode The virtual node to unmount\n * @param {import('../internal').VNode} parentVNode The parent of the VNode that\n * initiated the unmount\n * @param {boolean} [skipRemove] Flag that indicates that a parent node of the\n * current element is already detached from the DOM.\n */\nexport function unmount(vnode, parentVNode, skipRemove) {\n\tlet r;\n\tif (options.unmount) options.unmount(vnode);\n\n\tif ((r = vnode.ref)) {\n\t\tif (!r.current || r.current === vnode._dom) applyRef(r, null, parentVNode);\n\t}\n\n\tlet dom;\n\tif (!skipRemove && typeof vnode.type != 'function') {\n\t\tskipRemove = (dom = vnode._dom) != null;\n\t}\n\n\t// Must be set to `undefined` to properly clean up `_nextDom`\n\t// for which `null` is a valid value. See comment in `create-element.js`\n\tvnode._dom = vnode._nextDom = undefined;\n\n\tif ((r = vnode._component) != null) {\n\t\tif (r.componentWillUnmount) {\n\t\t\ttry {\n\t\t\t\tr.componentWillUnmount();\n\t\t\t} catch (e) {\n\t\t\t\toptions._catchError(e, parentVNode);\n\t\t\t}\n\t\t}\n\n\t\tr.base = r._parentDom = null;\n\t}\n\n\tif ((r = vnode._children)) {\n\t\tfor (let i = 0; i < r.length; i++) {\n\t\t\tif (r[i]) unmount(r[i], parentVNode, skipRemove);\n\t\t}\n\t}\n\n\tif (dom != null) removeNode(dom);\n}\n\n/** The `.render()` method for a PFC backing instance. */\nfunction doRender(props, state, context) {\n\treturn this.constructor(props, context);\n}\n","import { EMPTY_OBJ, EMPTY_ARR } from './constants';\nimport { commitRoot, diff } from './diff/index';\nimport { createElement, Fragment } from './create-element';\nimport options from './options';\n\nconst IS_HYDRATE = EMPTY_OBJ;\n\n/**\n * Render a Preact virtual node into a DOM element\n * @param {import('./internal').ComponentChild} vnode The virtual node to render\n * @param {import('./internal').PreactElement} parentDom The DOM element to\n * render into\n * @param {import('./internal').PreactElement | object} [replaceNode] Optional: Attempt to re-use an\n * existing DOM tree rooted at `replaceNode`\n */\nexport function render(vnode, parentDom, replaceNode) {\n\tif (options._root) options._root(vnode, parentDom);\n\n\t// We abuse the `replaceNode` parameter in `hydrate()` to signal if we\n\t// are in hydration mode or not by passing `IS_HYDRATE` instead of a\n\t// DOM element.\n\tlet isHydrating = replaceNode === IS_HYDRATE;\n\n\t// To be able to support calling `render()` multiple times on the same\n\t// DOM node, we need to obtain a reference to the previous tree. We do\n\t// this by assigning a new `_children` property to DOM nodes which points\n\t// to the last rendered tree. By default this property is not present, which\n\t// means that we are mounting a new tree for the first time.\n\tlet oldVNode = isHydrating\n\t\t? null\n\t\t: (replaceNode && replaceNode._children) || parentDom._children;\n\tvnode = createElement(Fragment, null, [vnode]);\n\n\t// List of effects that need to be called after diffing.\n\tlet commitQueue = [];\n\tdiff(\n\t\tparentDom,\n\t\t// Determine the new vnode tree and store it on the DOM element on\n\t\t// our custom `_children` property.\n\t\t((isHydrating ? parentDom : replaceNode || parentDom)._children = vnode),\n\t\toldVNode || EMPTY_OBJ,\n\t\tEMPTY_OBJ,\n\t\tparentDom.ownerSVGElement !== undefined,\n\t\treplaceNode && !isHydrating\n\t\t\t? [replaceNode]\n\t\t\t: oldVNode\n\t\t\t? null\n\t\t\t: parentDom.childNodes.length\n\t\t\t? EMPTY_ARR.slice.call(parentDom.childNodes)\n\t\t\t: null,\n\t\tcommitQueue,\n\t\treplaceNode || EMPTY_OBJ,\n\t\tisHydrating\n\t);\n\n\t// Flush all queued effects\n\tcommitRoot(commitQueue, vnode);\n}\n\n/**\n * Update an existing DOM element with data from a Preact virtual node\n * @param {import('./internal').ComponentChild} vnode The virtual node to render\n * @param {import('./internal').PreactElement} parentDom The DOM element to\n * update\n */\nexport function hydrate(vnode, parentDom) {\n\trender(vnode, parentDom, IS_HYDRATE);\n}\n","import { assign } from './util';\nimport { createVNode } from './create-element';\n\n/**\n * Clones the given VNode, optionally adding attributes/props and replacing its children.\n * @param {import('./internal').VNode} vnode The virtual DOM element to clone\n * @param {object} props Attributes/props to add when cloning\n * @param {Array<import('./internal').ComponentChildren>} rest Any additional arguments will be used as replacement children.\n * @returns {import('./internal').VNode}\n */\nexport function cloneElement(vnode, props, children) {\n\tlet normalizedProps = assign({}, vnode.props),\n\t\tkey,\n\t\tref,\n\t\ti;\n\tfor (i in props) {\n\t\tif (i == 'key') key = props[i];\n\t\telse if (i == 'ref') ref = props[i];\n\t\telse normalizedProps[i] = props[i];\n\t}\n\n\tif (arguments.length > 3) {\n\t\tchildren = [children];\n\t\tfor (i = 3; i < arguments.length; i++) {\n\t\t\tchildren.push(arguments[i]);\n\t\t}\n\t}\n\tif (children != null) {\n\t\tnormalizedProps.children = children;\n\t}\n\n\treturn createVNode(\n\t\tvnode.type,\n\t\tnormalizedProps,\n\t\tkey || vnode.key,\n\t\tref || vnode.ref,\n\t\tnull\n\t);\n}\n","import { enqueueRender } from './component';\n\nexport let i = 0;\n\nexport function createContext(defaultValue, contextId) {\n\tcontextId = '__cC' + i++;\n\n\tconst context = {\n\t\t_id: contextId,\n\t\t_defaultValue: defaultValue,\n\t\t/** @type {import('./internal').FunctionComponent} */\n\t\tConsumer(props, contextValue) {\n\t\t\t// return props.children(\n\t\t\t// \tcontext[contextId] ? context[contextId].props.value : defaultValue\n\t\t\t// );\n\t\t\treturn props.children(contextValue);\n\t\t},\n\t\t/** @type {import('./internal').FunctionComponent} */\n\t\tProvider(props) {\n\t\t\tif (!this.getChildContext) {\n\t\t\t\tlet subs = [];\n\t\t\t\tlet ctx = {};\n\t\t\t\tctx[contextId] = this;\n\n\t\t\t\tthis.getChildContext = () => ctx;\n\n\t\t\t\tthis.shouldComponentUpdate = function(_props) {\n\t\t\t\t\tif (this.props.value !== _props.value) {\n\t\t\t\t\t\t// I think the forced value propagation here was only needed when `options.debounceRendering` was being bypassed:\n\t\t\t\t\t\t// https://github.com/preactjs/preact/commit/4d339fb803bea09e9f198abf38ca1bf8ea4b7771#diff-54682ce380935a717e41b8bfc54737f6R358\n\t\t\t\t\t\t// In those cases though, even with the value corrected, we're double-rendering all nodes.\n\t\t\t\t\t\t// It might be better to just tell folks not to use force-sync mode.\n\t\t\t\t\t\t// Currently, using `useContext()` in a class component will overwrite its `this.context` value.\n\t\t\t\t\t\t// subs.some(c => {\n\t\t\t\t\t\t// \tc.context = _props.value;\n\t\t\t\t\t\t// \tenqueueRender(c);\n\t\t\t\t\t\t// });\n\n\t\t\t\t\t\t// subs.some(c => {\n\t\t\t\t\t\t// \tc.context[contextId] = _props.value;\n\t\t\t\t\t\t// \tenqueueRender(c);\n\t\t\t\t\t\t// });\n\t\t\t\t\t\tsubs.some(enqueueRender);\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tthis.sub = c => {\n\t\t\t\t\tsubs.push(c);\n\t\t\t\t\tlet old = c.componentWillUnmount;\n\t\t\t\t\tc.componentWillUnmount = () => {\n\t\t\t\t\t\tsubs.splice(subs.indexOf(c), 1);\n\t\t\t\t\t\tif (old) old.call(c);\n\t\t\t\t\t};\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn props.children;\n\t\t}\n\t};\n\n\t// Devtools needs access to the context object when it\n\t// encounters a Provider. This is necessary to support\n\t// setting `displayName` on the context object instead\n\t// of on the component itself. See:\n\t// https://reactjs.org/docs/context.html#contextdisplayname\n\n\treturn (context.Provider._contextRef = context.Consumer.contextType = context);\n}\n"],"names":["EMPTY_OBJ","EMPTY_ARR","IS_NON_DIMENSIONAL","assign","obj","props","i","removeNode","node","parentNode","removeChild","options","__e","error","vnode","component","ctor","handled","wasHydrating","constructor","getDerivedStateFromError","setState","componentDidCatch","e","__v","createElement","type","children","key","ref","normalizedProps","arguments","length","push","defaultProps","undefined","createVNode","original","__k","__","__b","__d","__c","__h","createRef","current","Fragment","isValidElement","Component","context","this","getDomSibling","childIndex","indexOf","sibling","renderComponent","oldDom","parentDom","commitQueue","oldVNode","diff","ownerSVGElement","commitRoot","updateParentDomPointers","base","child","prototype","update","callback","s","state","enqueueRender","forceUpdate","render","rerenderQueue","defer","Promise","then","bind","resolve","setTimeout","prevDebounce","c","process","debounceRendering","queue","sort","a","b","some","diffChildren","renderResult","newParentVNode","oldParentVNode","globalContext","isSvg","excessDomChildren","isHydrating","j","childVNode","newDom","firstChildDom","refs","oldChildren","oldChildrenLength","Array","isArray","reorderChildren","placeChild","value","unmount","applyRef","tmp","toChildArray","out","nextDom","outer","appendChild","sibDom","nextSibling","insertBefore","setStyle","style","setProperty","test","dom","name","oldValue","useCapture","nameLower","proxy","cssText","replace","toLowerCase","slice","_listeners","eventProxyCapture","eventProxy","addEventListener","removeEventListener","removeAttributeNS","setAttributeNS","removeAttribute","setAttribute","event","newVNode","newType","isNew","oldProps","oldState","snapshot","clearProcessingException","newProps","contextType","provider","componentContext","doRender","sub","getDerivedStateFromProps","componentWillMount","componentDidMount","componentWillReceiveProps","shouldComponentUpdate","componentWillUpdate","componentDidUpdate","getChildContext","getSnapshotBeforeUpdate","nodeType","localName","document","createTextNode","createElementNS","is","data","call","childNodes","oldHtml","dangerouslySetInnerHTML","newHtml","attributes","innerHTML","hydrate","diffProps","checked","diffElementNodes","diffed","root","cb","parentVNode","skipRemove","r","componentWillUnmount","IS_HYDRATE","replaceNode","cloneElement","createContext","defaultValue","contextId","Consumer","contextValue","Provider","subs","ctx","_props","old","splice"],"mappings":"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"}